{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/contactAction.js","redux/auth/authReducer.js","redux/auth/authAction.js","redux/contacts/contactReducer.js","redux/store.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","components/userMenu/UserMenu.js","components/header/Header.js","components/app/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authAction","registerRequest","post","result","data","registerSuccess","registerError","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","isAuthenticated","state","getUserEmail","user","email","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleFilter","payload","target","value","initialUserState","name","createReducer","_","error","authPersistConfig","key","storage","whiteList","combineReducers","items","contactsAction","filter","contact","id","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","REGISTER","PAUSE","PERSIST","PURGE","persistor","persistStore","path","label","exact","component","lazy","private","restricted","connect","authSelectors","Component","routeProps","render","props","to","avatar","onLogout","authOperations","className","src","alt","width","height","type","onClick","AppBar","position","Toolbar","activeClassName","App","this","onGetCurrentUser","fallback","routes","map","route","ReactDOM","loading","document","getElementById"],"mappings":"gOAGAA,IAAMC,SAASC,QAAU,4CAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAsDnC,GAAEC,SAlDA,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC9BD,EAASE,IAAWC,mBADU,kBAGPZ,IAAMa,KAAK,gBAAiBL,GAHrB,OAGtBM,EAHsB,OAI5BX,EAAUW,EAAOC,KAAKZ,OACtBM,EAASE,IAAWK,gBAAgBF,EAAOC,OALf,gDAO5BN,EAASE,IAAWM,cAAX,OAPmB,yDAAJ,uDAkDDC,MAvCb,SAAAV,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC3BD,EAASE,IAAWQ,gBADO,kBAGJnB,IAAMa,KAAK,eAAgBL,GAHvB,OAGnBM,EAHmB,OAIzBX,EAAUW,EAAOC,KAAKZ,OACtBM,EAASE,IAAWS,aAAaN,EAAOC,OALf,gDAOzBN,EAASE,IAAWU,WAAX,OAPgB,yDAAJ,uDAuCSC,OA5BnB,yDAAM,WAAMb,GAAN,SAAAC,EAAA,6DACnBD,EAASE,IAAWY,iBADD,kBAGXvB,IAAMa,KAAK,iBAHA,OAIjBV,IACAM,EAASE,IAAWa,iBALH,gDAOjBf,EAASE,IAAWc,YAAX,OAPQ,yDAAN,uDA4B2BC,eAjBnB,yDAAM,WAAOjB,EAAUkB,GAAjB,mBAAAjB,EAAA,2DAGvBiB,IADaC,EAFU,EAEzBC,KAAQ1B,MAFiB,wDAO3BA,EAAUyB,GACVnB,EAASE,IAAWmB,yBARO,kBAUJ9B,IAAM+B,IAAI,kBAVN,OAUnBjB,EAVmB,OAWzBL,EAASE,IAAWqB,sBAAsBlB,EAAOC,OAXxB,kDAazBN,EAASE,IAAWsB,oBAAX,OAbgB,0DAAN,0DC3CR,GAAEC,gBAJO,SAAAC,GAAK,OAAIA,EAAMN,KAAK1B,OAIViC,aAFb,SAAAD,GAAK,OAAIA,EAAMN,KAAKQ,KAAKC,Q,uCCF9C,WAEaC,EAAqBC,YAAa,uBAClCC,EAAqBD,YAAa,uBAClCE,EAAmBF,YAAa,qBAEhCG,EAAoBH,YAAa,uBACjCI,EAAoBJ,YAAa,uBACjCK,EAAkBL,YAAa,qBAE/BM,EAAuBN,YAAa,0BACpCO,EAAuBP,YAAa,0BACpCQ,EAAqBR,YAAa,wBAElCS,EAAeT,YAAa,mBAAmB,kBAAiB,CAC3EU,QAD0D,EAAGC,OAC7CC,UAGH,KACbb,qBACAE,qBACAC,mBACAC,oBACAC,oBACAC,kBACAC,uBACAC,uBACAC,qBACAC,iB,yHCvBII,EAAmB,CAAEC,KAAM,KAAMhB,MAAO,MAExCD,EAAOkB,YAAcF,GAAD,mBACvB1C,IAAWK,iBAAkB,SAACwC,EAAD,YAAMN,QAAsBb,QADlC,cAEvB1B,IAAWS,cAAe,SAACoC,EAAD,YAAMN,QAAsBb,QAF/B,cAGvB1B,IAAWa,eAAgB,kBAAM6B,KAHV,cAIvB1C,IAAWqB,uBAAwB,SAACwB,EAAD,YAAMN,WAJlB,IAOpB/C,EAAQoD,YAAc,MAAD,mBACxB5C,IAAWK,iBAAkB,SAACwC,EAAD,YAAMN,QAAsB/C,SADjC,cAExBQ,IAAWS,cAAe,SAACoC,EAAD,YAAMN,QAAsB/C,SAF9B,cAGxBQ,IAAWa,eAAgB,kBAAM,QAHT,IAMrBiC,EAAQF,YAAc,MAAD,mBACxB5C,IAAWM,eAAgB,SAACuC,EAAD,YAAMN,WADT,cAExBvC,IAAWU,YAAa,SAACmC,EAAD,YAAMN,WAFN,cAGxBvC,IAAWc,aAAc,SAAC+B,EAAD,YAAMN,WAHP,cAIxBvC,IAAWsB,qBAAsB,SAACuB,EAAD,YAAMN,WAJf,IAOdQ,EAAoB,CAC/BC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGCC,gBAAgB,CAC7BzB,OACAlC,QACAsD,W,+BCpCF,WAEM7C,EAAkB4B,YAAa,yBAC/BxB,EAAkBwB,YAAa,yBAC/BvB,EAAgBuB,YAAa,uBAE7BrB,EAAeqB,YAAa,sBAC5BpB,EAAeoB,YAAa,sBAC5BnB,EAAamB,YAAa,oBAE1BjB,EAAgBiB,YAAa,uBAC7BhB,EAAgBgB,YAAa,uBAC7Bf,EAAce,YAAa,qBAE3BV,EAAwBU,YAAa,+BACrCR,EAAwBQ,YAAa,+BACrCP,EAAsBO,YAAa,6BAE1B,KACb5B,kBACAO,eACAI,gBACAO,wBACAb,gBACAI,aACAI,cACAQ,sBACAjB,kBACAI,eACAI,gBACAQ,0B,2ECvBI+B,EAAQR,YAAc,IAAD,mBACxBS,IAAevB,oBAAqB,SAACe,EAAD,YAAMN,WADlB,cAExBc,IAAepB,mBAAoB,SAACT,EAAD,OAAUe,EAAV,EAAUA,QAAV,4BAC/Bf,GAD+B,CAElCe,OAJuB,cAMxBc,IAAejB,sBATI,SAACZ,EAAD,OAAUe,EAAV,EAAUA,QAAV,OACpBf,EAAM8B,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOjB,QAEd,IASrBe,EAASV,YAAc,GAAD,eACzBS,IAAef,cAAe,SAACd,EAAD,YAAUe,YAG5BY,gBAAgB,CAC7BC,QACAE,Y,mPCPWG,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,IACV3C,KAAM4C,YAAef,IAAmBgB,MAG1CC,UAAUC,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAUC,IAAOC,IAASC,UAKtDC,EAAYC,YAAapB,G,+CC3BvB,GACb,CACEqB,KAAM,IACNC,MAAO,OACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,SACNC,MAAO,QACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,uDACtBC,SAAS,EACTC,YAAY,I,gBCbDC,eAHS,SAAA7D,GAAK,MAAK,CAChCD,gBAAiB+D,IAAc/D,gBAAgBC,MAElC6D,EAfM,SAAC,GAAD,IACRE,EADQ,EACnBN,UACA1D,EAFmB,EAEnBA,gBACGiE,EAHgB,sDAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACXnE,EAAkB,kBAACgE,EAAcG,GAAY,kBAAC,IAAD,CAAUC,GAAG,kBCYjDN,eAHS,SAAA7D,GAAK,MAAK,CAChCD,gBAAiB+D,IAAc/D,gBAAgBC,MAElC6D,EApBK,SAAC,GAAD,IACPE,EADO,EAClBN,UACA1D,EAFkB,EAElBA,gBACA6D,EAHkB,EAGlBA,WACGI,EAJe,mEAMlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACXnE,GAAmB6D,EACjB,kBAAC,IAAD,CAAUO,GAAG,cAEb,kBAACJ,EAAcG,U,kBCcRL,G,MAAAA,aANS,SAAA7D,GAAK,MAAK,CAChCG,MAAO2D,IAAc7D,aAAaD,GAClCoE,OACE,gJAGoC,CAAEC,SAAUC,IAAenF,QAApD0E,EA1BE,SAAC,GAAiC,IAA/BO,EAA8B,EAA9BA,OAAQjE,EAAsB,EAAtBA,MAAOkE,EAAe,EAAfA,SACjC,OACE,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,uBACVC,IAAKJ,EACLK,IAAI,cACJC,MAAM,KACNC,OAAO,QAGX,0BAAMJ,UAAU,iBAAiBpE,GACjC,4BAAQoE,UAAU,aAAaK,KAAK,SAASC,QAASR,GAAtD,eC2CSR,G,MAAAA,aAJS,SAAA7D,GAAK,MAAK,CAChCD,gBAAiB+D,IAAc/D,gBAAgBC,MAGlC6D,EApDA,SAAC,GAAyB,IAAvB9D,EAAsB,EAAtBA,gBAChB,OACE,yBAAKwE,UAAU,UACb,kBAACO,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAAST,UAAU,cACjB,kBAAC,IAAD,CACEf,OAAK,EACLW,GAAG,IACHI,UAAU,kBACVU,gBAAgB,0BAJlB,QAQClF,EACC,oCACE,kBAAC,IAAD,CACEoE,GAAG,YACHI,UAAU,kBACVU,gBAAgB,0BAHlB,YAMW,IACX,kBAAC,EAAD,MAAa,KAGf,oCACE,kBAAC,IAAD,CACEd,GAAG,SACHI,UAAU,kBACVU,gBAAgB,0BAHlB,SAOA,kBAAC,IAAD,CACEd,GAAG,YACHI,UAAU,kBACVU,gBAAgB,0BAHlB,wBC9BRC,G,wLAEFC,KAAKjB,MAAMkB,qB,+BAIX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAUC,SAAU,2CAClB,kBAAC,IAAD,KACGC,EAAOC,KAAI,SAAAC,GAAK,OACfA,EAAM7B,QACJ,kBAAC,EAAD,eAAcnC,IAAKgE,EAAMjC,OAAWiC,IAEpC,kBAAC,EAAD,eACEhE,IAAKgE,EAAMjC,OACPiC,EAFN,CAGE5B,WAAY4B,EAAM5B,wB,GAlBlBG,cA6BHF,cAAQ,KAAM,CAC3BuB,iBAAkBd,IAAe/E,gBADpBsE,CAEZqB,G,MCnCHO,IAASxB,OACP,kBAAC,IAAD,CAAUhC,MAAOA,GACf,kBAAC,IAAD,CAAayD,QAAS,KAAMtC,UAAWA,GACrC,kBAAC,EAAD,QAGJuC,SAASC,eAAe,W","file":"static/js/main.e1b32adf.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authAction from './authAction';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authAction.registerRequest());\r\n  try {\r\n    const result = await axios.post('/users/signup', credentials);\r\n    token.set(result.data.token);\r\n    dispatch(authAction.registerSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(authAction.registerError(error));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authAction.loginRequest());\r\n  try {\r\n    const result = await axios.post('/users/login', credentials);\r\n    token.set(result.data.token);\r\n    dispatch(authAction.loginSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(authAction.loginError(error));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authAction.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authAction.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authAction.logoutError(error));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authAction.getCurrentUserRequest());\r\n  try {\r\n    const result = await axios.get('/users/current');\r\n    dispatch(authAction.getCurrentUserSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(authAction.getCurrentUserError(error));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default { isAuthenticated, getUserEmail };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('@contact/getRequest');\r\nexport const getContactsSuccess = createAction('@contact/getSuccess');\r\nexport const getContactsError = createAction('@contact/getError');\r\n\r\nexport const addContactRequest = createAction('@contact/addRequest');\r\nexport const addContactSuccess = createAction('@contact/addSuccess');\r\nexport const addContactError = createAction('@contact/addError');\r\n\r\nexport const deleteContactRequest = createAction('@contact/deleteRequest');\r\nexport const deleteContactSuccess = createAction('@contact/deleteSuccess');\r\nexport const deleteContactError = createAction('@contact/deleteError');\r\n\r\nexport const handleFilter = createAction('@contact/filter', ({ target }) => ({\r\n  payload: target.value,\r\n}));\r\n\r\nexport default {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  handleFilter,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authAction from './authAction';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authAction.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authAction.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authAction.logoutSuccess]: () => initialUserState,\r\n  [authAction.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authAction.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authAction.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authAction.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authAction.registerError]: (_, { payload }) => payload,\r\n  [authAction.loginError]: (_, { payload }) => payload,\r\n  [authAction.logoutError]: (_, { payload }) => payload,\r\n  [authAction.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whiteList: ['token'],\r\n};\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('@auth/registerRequest');\r\nconst registerSuccess = createAction('@auth/registerSuccess');\r\nconst registerError = createAction('@auth/registerError');\r\n\r\nconst loginRequest = createAction('@auth/loginRequest');\r\nconst loginSuccess = createAction('@auth/loginSuccess');\r\nconst loginError = createAction('@auth/loginError');\r\n\r\nconst logoutRequest = createAction('@auth/logoutRequest');\r\nconst logoutSuccess = createAction('@auth/logoutSuccess');\r\nconst logoutError = createAction('@auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('@auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('@auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('@auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  loginRequest,\r\n  logoutRequest,\r\n  getCurrentUserRequest,\r\n  registerError,\r\n  loginError,\r\n  logoutError,\r\n  getCurrentUserError,\r\n  registerSuccess,\r\n  loginSuccess,\r\n  logoutSuccess,\r\n  getCurrentUserSuccess,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactAction';\r\n\r\nconst removeContact = (state, { payload }) =>\r\n  state.filter(contact => contact.id !== payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsAction.getContactsSuccess]: (_, { payload }) => payload,\r\n  [contactsAction.addContactSuccess]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [contactsAction.deleteContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.handleFilter]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  REGISTER,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n} from 'redux-persist';\r\n\r\nimport contactReducer from './contacts/contactReducer';\r\nimport authReducer, { authPersistConfig } from './auth/authReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, REGISTER, PAUSE, PERSIST, PURGE],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./containers/home/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./containers/register/Register')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./containers/login/Login')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./containers/contacts/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport './UserMenu.css';\r\n\r\nconst UserMenu = ({ avatar, email, onLogout }) => {\r\n  return (\r\n    <div className=\"avatar-wrapper\">\r\n      <div className=\"account-avatar\">\r\n        <img\r\n          className=\"avatar avatar--hover\"\r\n          src={avatar}\r\n          alt=\"User avatar\"\r\n          width=\"44\"\r\n          height=\"44\"\r\n        />\r\n      </div>\r\n      <span className=\"account-title\">{email}</span>\r\n      <button className=\"logout-btn\" type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUserEmail(state),\r\n  avatar:\r\n    'https://img1.freepng.ru/20180203/vhw/kisspng-anonymous-icon-v-for-vendetta-png-transparent-image-5a75f48a0b24f0.4091240015176797540457.jpg',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport './Header.css';\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"app_header\">\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            className=\"navigation-link\"\r\n            activeClassName=\"navigation-link-active\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n          {isAuthenticated ? (\r\n            <>\r\n              <NavLink\r\n                to=\"/contacts\"\r\n                className=\"navigation-link\"\r\n                activeClassName=\"navigation-link-active\"\r\n              >\r\n                Contacts\r\n              </NavLink>{' '}\r\n              <UserMenu />{' '}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavLink\r\n                to=\"/login\"\r\n                className=\"navigation-link\"\r\n                activeClassName=\"navigation-link-active\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/register\"\r\n                className=\"navigation-link\"\r\n                activeClassName=\"navigation-link-active\"\r\n              >\r\n                Registration\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { authOperations } from '../../redux/auth';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport PublicRoute from '../PublicRoute';\r\nimport Header from '../header/Header';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            {routes.map(route =>\r\n              route.private ? (\r\n                <PrivateRoute key={route.label} {...route} />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={route.label}\r\n                  {...route}\r\n                  restricted={route.restricted}\r\n                />\r\n              ),\r\n            )}\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './components/app/App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}